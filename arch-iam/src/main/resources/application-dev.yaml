server:
  port: 9090
  shutdown: graceful
spring:
  jackson:
    # 日期格式
    date-format: yyyy-MM-dd HH:mm:ss
    # 时区
    time-zone: GMT+8
    # 忽略 null 的属性值
    default-property-inclusion: NON_NULL
  # 缓存配置
  cache:
    # 启用自动化装配的 caffeine 本地缓存
    type: caffeine
    caffeine:
      # 默认容量为 128 最大 10000 且缓存过期时间 30s 的本地缓存
      spec: initialCapacity=128,maximumSize=10000,expireAfterWrite=30s
  # 调度器线程池
  task:
    scheduling:
      thread-name-prefix: "arch-scheduling-"
      pool:
        size: 3
  # Security 默认用户设置
  security:
    oauth2:
      authorizationserver:
        issuer: ${ISSUE_ADDR:http://localhost:9000/arch-iam}
        # OAuth2 客户端注册信息，生产环境可切换成基于数据库的配置模式
        client:
          # 本方网页端用户使用 Web 端登录时，由于是自身系统，使用已被 OAuth2.1 弃用的密码模式（例如：Vue）
          # 网页客户端，代替用户提交密码进行认证（1. 网页客户端自身认证 2.认证后再进行用户密码模式认证 3.获得用户的访问令牌、刷新令牌）
          arch-web:
            token:
              refresh-token-time-to-live: P1D
            registration:
              client-id: arch-web
              client-name: arch-web
              # secretweb
              client-secret: $2a$10$ueyW3xrcU4fV05A0t3lC0.KWmYYEAnQknz3A64vfBr0Rwyc/etHsW
              client-authentication-methods: [ client_secret_post, client_secret_basic ]
              # 一方登录提供密码模式、刷新令牌
              authorization-grant-types: [ client_credentials, password, refresh_token]
              scopes: [ WEB ]
          arch-app:
            token:
              access-token-time-to-live: P1D
            registration:
              client-id: arch-app
              client-name: arch-app
              # secret
              client-secret: $2a$10$XWY/JeWE1SpNQus1mCCJqeh93jrj.hjGDHqJwKLuEEBwv/s5Xylm2
              client-authentication-methods: [client_secret_post, client_secret_basic]
              authorization-grant-types: [client_credentials]
              scopes: [SERVICE]
          arch-users:
            token:
              access-token-time-to-live: P1D
            registration:
              client-id: arch-users
              client-name: arch-users
              # secretusers
              client-secret: $2a$10$2mbgP421pk.kLvbEeyZNKOFhIewdVfg/9dSkIl34ROkfXu./xi0/O
              client-authentication-methods: [ client_secret_post, client_secret_basic ]
              authorization-grant-types: [ client_credentials ]
              scopes: [ SERVICE ]
          arch-iam:
            token:
              access-token-time-to-live: P1D
            registration:
              client-id: ${spring.application.name}
              client-name: ${spring.application.name}
              # secretiam
              client-secret: $2a$10$b7VN/WDZLSiZKmQKwVJBweiOVaJDiT52Jm35KXoVSouFEbtTg7tIe
              client-authentication-methods: [ client_secret_post, client_secret_basic ]
              authorization-grant-types: [ client_credentials ]
              scopes: [ SERVICE ]
      # 客户端
      client:
        registration:
          ArchIAM:
            provider: ArchIAM
            client-id: ${spring.application.name}
            client-name: ${spring.application.name}
            authorization-grant-type: client_credentials
            client-authentication-method: client_secret_basic
            scope: [ SERVICE ]
        provider:
          ArchIAM:
            # 设置 issuer-uri，让客户端启动时像此授权中心动态获取 OAuth2 和 OIDC 周知端点 URL
            #issuer-uri: ${ISSUE_ADDR:http://localhost:9000/arch-iam}

            # 不使用签发地址进行解析时，手动指定如下四个周知端点 URL
            authorizationUri: ${ISSUE_ADDR:http://localhost:9000/arch-iam}/oauth2/authorize
            token-uri: ${ISSUE_ADDR:http://localhost:9000/arch-iam}/oauth2/token
            jwk-set-uri: ${ISSUE_ADDR:http://localhost:9000/arch-iam}/oauth2/jwks
            user-info-uri: ${ISSUE_ADDR:http://localhost:9000/arch-iam}/userinfo
      # 资源服务器
      resourceserver:
        jwt:
          # 使用网络获取认证服务器公钥
          #issuer-uri: ${ISSUE_ADDR:http://localhost:9000/arch-iam}

          # 不使用签发地址进行解析时，指定本地保存的签发服务器公钥地址
          #   优点：离线将授权服务器的公钥拷贝到本地，无需依赖网络访问
          #   缺点：授权服务器公钥变更没法自动获取
          public-key-location: classpath:arch-iam/public.pem

# 日志配置
logging:
  pattern:
    console: "%clr(%d{HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(-){faint} %clr([%t]){faint} %clr(%-40logger{39}){cyan}[%line]%clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
  level:
    org.springframework: debug
    feign: debug
# API 文档
springdoc:
  version: "@project.version@"
  api-docs:
    version: openapi_3_1
    path: /v3/api-docs/arch-iam
  # OAuth2 认证服务器开启端口显示
  show-oauth2-endpoints: true
  swagger-ui:
    urls:
      - name: arch-users
        url: /v3/api-docs/arch-users
      - name: arch-iam
        url: /v3/api-docs/arch-iam
      - name: arch-app
        url: /v3/api-docs/arch-app
    display-request-duration: true
    groups-order: DESC
    operationsSorter: method
    disable-swagger-default-url: true
    use-root-path: true
    oauth:
      client-id: arch-web
      client-secret: secretweb
  oAuthFlow:
    authorizationUrl: ${ISSUE_ADDR:http://localhost:9000/arch-iam}/oauth2/authorize
    tokenUrl: ${ISSUE_ADDR:http://localhost:9000/arch-iam}/oauth2/token
  show-actuator: false
  cache:
    disabled: true
# 展示指标端点
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      probes:
        enabled: true
    refresh:
      enabled: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true